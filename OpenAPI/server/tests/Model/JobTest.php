<?php

/**
 * MultiFlexi API
 * PHP version 7.4
 *
 * @package MultiFlexi
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * This is an example of using OAuth2 Application Flow in a specification to describe security to your API.
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace MultiFlexi\Model;

use PHPUnit\Framework\TestCase;
use MultiFlexi\Model\Job;

/**
 * JobTest Class Doc Comment
 *
 * @package MultiFlexi\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \MultiFlexi\Model\Job
 */
class JobTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Job"
     */
    public function testJob()
    {
        $testJob = new Job();
        $namespacedClassname = Job::getModelsNamespace() . '\\Job';
        $this->assertSame('\\' . Job::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        $this->markTestIncomplete(
            'Test of "Job" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        $this->markTestIncomplete(
            'Test of "id" property in "Job" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "appId"
     */
    public function testPropertyAppId()
    {
        $this->markTestIncomplete(
            'Test of "appId" property in "Job" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "begin"
     */
    public function testPropertyBegin()
    {
        $this->markTestIncomplete(
            'Test of "begin" property in "Job" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "end"
     */
    public function testPropertyEnd()
    {
        $this->markTestIncomplete(
            'Test of "end" property in "Job" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "companyId"
     */
    public function testPropertyCompanyId()
    {
        $this->markTestIncomplete(
            'Test of "companyId" property in "Job" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "exitcode"
     */
    public function testPropertyExitcode()
    {
        $this->markTestIncomplete(
            'Test of "exitcode" property in "Job" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "stdout"
     */
    public function testPropertyStdout()
    {
        $this->markTestIncomplete(
            'Test of "stdout" property in "Job" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "stderr"
     */
    public function testPropertyStderr()
    {
        $this->markTestIncomplete(
            'Test of "stderr" property in "Job" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "launchedBy"
     */
    public function testPropertyLaunchedBy()
    {
        $this->markTestIncomplete(
            'Test of "launchedBy" property in "Job" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "env"
     */
    public function testPropertyEnv()
    {
        $this->markTestIncomplete(
            'Test of "env" property in "Job" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "command"
     */
    public function testPropertyCommand()
    {
        $this->markTestIncomplete(
            'Test of "command" property in "Job" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "schedule"
     */
    public function testPropertySchedule()
    {
        $this->markTestIncomplete(
            'Test of "schedule" property in "Job" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "executor"
     */
    public function testPropertyExecutor()
    {
        $this->markTestIncomplete(
            'Test of "executor" property in "Job" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "runtemplateId"
     */
    public function testPropertyRuntemplateId()
    {
        $this->markTestIncomplete(
            'Test of "runtemplateId" property in "Job" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "appVersion"
     */
    public function testPropertyAppVersion()
    {
        $this->markTestIncomplete(
            'Test of "appVersion" property in "Job" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = Job::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}
