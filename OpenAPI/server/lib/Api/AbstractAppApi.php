<?php

/**
 * MultiFlexi API
 * PHP version 7.4
 *
 * @package AbraFlexi\MultiFlexi
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * This is an example of using OAuth2 Application Flow in a specification to describe security to your API.
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 * Extend this class with your controller. You can inject dependencies via class constructor,
 * @see https://github.com/PHP-DI/Slim-Bridge basic example.
 */
namespace MultiFlexi\Api;

use Psr\Http\Message\ServerRequestInterface;
use Psr\Http\Message\ResponseInterface;
use Slim\Exception\HttpNotImplementedException;

/**
 * AbstractAppApi Class Doc Comment
 *
 * @package MultiFlexi\Api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */
abstract class AbstractAppApi
{
    /**
     * GET getAppById
     * Summary: Get App by ID
     * Notes: Returns a single App
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param string $appId ID of app to return
     * @param string $suffix force format suffix
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getAppById(
        ServerRequestInterface $request,
        ResponseInterface $response,
        string $appId,
        string $suffix
    ): ResponseInterface {
        $message = "How about implementing getAppById as a GET method in MultiFlexi\Api\AppApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET listApps
     * Summary: Show All Apps
     * Notes: All apps registeres
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param string $suffix force format suffix
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function listApps(
        ServerRequestInterface $request,
        ResponseInterface $response,
        string $suffix
    ): ResponseInterface {
        $message = "How about implementing listApps as a GET method in MultiFlexi\Api\AppApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * POST setAppById
     * Summary: Create or Update Application
     * Notes: Create or Update App by ID
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function setAppById(
        ServerRequestInterface $request,
        ResponseInterface $response
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $appId = (key_exists('appId', $queryParams)) ? $queryParams['appId'] : null;
        $message = "How about implementing setAppById as a POST method in MultiFlexi\Api\AppApi class?";
        throw new HttpNotImplementedException($request, $message);
    }
}
