<?php

/**
 * MultiFlexi API
 * PHP version 7.4
 *
 * @package MultiFlexi
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * This is an example of using OAuth2 Application Flow in a specification to describe security to your API.
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 */
namespace MultiFlexi\Model;

use MultiFlexi\BaseModel;

/**
 * Company
 *
 * @package MultiFlexi\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */
class Company extends BaseModel
{
    /**
     * @var string Models namespace.
     * Can be required for data deserialization when model contains referenced schemas.
     */
    protected const MODELS_NAMESPACE = '\MultiFlexi\Model';

    /**
     * @var string Constant with OAS schema of current class.
     * Should be overwritten by inherited class.
     */
    protected const MODEL_SCHEMA = <<<'SCHEMA'
{
  "properties" : {
    "id" : {
      "type" : "integer",
      "format" : "int64",
      "example" : 10
    },
    "enabled" : {
      "type" : "boolean",
      "example" : false
    },
    "settings" : {
      "type" : "string"
    },
    "logo" : {
      "type" : "string"
    },
    "server" : {
      "type" : "integer",
      "format" : "int64",
      "example" : 0
    },
    "name" : {
      "maxLength" : 32,
      "type" : "string"
    },
    "ic" : {
      "maxLength" : 32,
      "type" : "string"
    },
    "company" : {
      "maxLength" : 255,
      "type" : "string",
      "description" : "Company Code"
    },
    "rw" : {
      "type" : "boolean",
      "description" : "Write permissions"
    },
    "setup" : {
      "type" : "boolean",
      "example" : false
    },
    "webhook" : {
      "type" : "boolean",
      "description" : "Webhook ready"
    },
    "DatCreate" : {
      "type" : "string",
      "format" : "date-time"
    },
    "DatUpdate" : {
      "type" : "string",
      "format" : "date-time"
    },
    "customer" : {
      "type" : "integer",
      "format" : "int64",
      "example" : 10
    },
    "email" : {
      "maxLength" : 64,
      "type" : "string",
      "format" : "email"
    },
    "code" : {
      "maxLength" : 10,
      "type" : "string",
      "example" : ""
    }
  }
}
SCHEMA;
}
