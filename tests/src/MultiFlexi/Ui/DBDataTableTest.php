<?php

declare(strict_types=1);

/**
 * This file is part of the MultiFlexi package
 *
 * https://multiflexi.eu/
 *
 * (c) Vítězslav Dvořák <http://vitexsoftware.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Test\MultiFlexi\Ui;

use MultiFlexi\Ui\DBDataTable;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2023-11-07 at 13:03:24.
 *
 * @no-named-arguments
 */
class DBDataTableTest extends \PHPUnit\Framework\TestCase
{
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->object = new DBDataTable();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void
    {
    }

    /**
     * @covers \MultiFlexi\Ui\DBDataTable::getDateColumns
     *
     * @todo   Implement testgetDateColumns().
     */
    public function testgetDateColumns(): void
    {
        $this->assertEquals('', $this->object->getDateColumns());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\Ui\DBDataTable::prepareColumns
     *
     * @todo   Implement testprepareColumns().
     */
    public function testprepareColumns(): void
    {
        $this->assertEquals('', $this->object->prepareColumns());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\Ui\DBDataTable::finalize
     *
     * @todo   Implement testfinalize().
     */
    public function testfinalize(): void
    {
        $this->assertEquals('', $this->object->finalize());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\Ui\DBDataTable::getUri
     *
     * @todo   Implement testgetUri().
     */
    public function testgetUri(): void
    {
        $this->assertEquals('', $this->object->getUri());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\Ui\DBDataTable::dataSourceURI
     *
     * @todo   Implement testdataSourceURI().
     */
    public function testdataSourceURI(): void
    {
        $this->assertEquals('', $this->object->dataSourceURI());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\Ui\DBDataTable::addButton
     *
     * @todo   Implement testaddButton().
     */
    public function testaddButton(): void
    {
        $this->assertEquals('', $this->object->addButton());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\Ui\DBDataTable::addCustomButton
     *
     * @todo   Implement testaddCustomButton().
     */
    public function testaddCustomButton(): void
    {
        $this->assertEquals('', $this->object->addCustomButton());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\Ui\DBDataTable::javaScript
     *
     * @todo   Implement testjavaScript().
     */
    public function testjavaScript(): void
    {
        $this->assertEquals('', $this->object->javaScript());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\Ui\DBDataTable::columnIndexNames
     *
     * @todo   Implement testcolumnIndexNames().
     */
    public function testcolumnIndexNames(): void
    {
        $this->assertEquals('', $this->object->columnIndexNames());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\Ui\DBDataTable::getColumnsScript
     *
     * @todo   Implement testgetColumnsScript().
     */
    public function testgetColumnsScript(): void
    {
        $this->assertEquals('', $this->object->getColumnsScript());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\Ui\DBDataTable::columnsToHeader
     *
     * @todo   Implement testcolumnsToHeader().
     */
    public function testcolumnsToHeader(): void
    {
        $this->assertEquals('', $this->object->columnsToHeader());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\Ui\DBDataTable::footerCallback
     *
     * @todo   Implement testfooterCallback().
     */
    public function testfooterCallback(): void
    {
        $this->assertEquals('', $this->object->footerCallback());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\Ui\DBDataTable::addFooter
     *
     * @todo   Implement testaddFooter().
     */
    public function testaddFooter(): void
    {
        $this->assertEquals('', $this->object->addFooter());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }
}
