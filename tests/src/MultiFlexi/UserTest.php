<?php

declare(strict_types=1);

/**
 * This file is part of the MultiFlexi package
 *
 * https://multiflexi.eu/
 *
 * (c) Vítězslav Dvořák <http://vitexsoftware.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Test\MultiFlexi;

use MultiFlexi\User;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2023-11-07 at 13:03:36.
 */
class UserTest extends \PHPUnit\Framework\TestCase
{
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->object = new User();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void
    {
    }

    /**
     * @covers \MultiFlexi\User::getIcon
     *
     * @todo   Implement testgetIcon().
     */
    public function testgetIcon(): void
    {
        $this->assertEquals('', $this->object->getIcon());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::getId
     *
     * @todo   Implement testgetId().
     */
    public function testgetId(): void
    {
        $this->assertEquals('', $this->object->getId());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::getUserName
     *
     * @todo   Implement testgetUserName().
     */
    public function testgetUserName(): void
    {
        $this->assertEquals('', $this->object->getUserName());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::getRecordName
     *
     * @todo   Implement testgetRecordName().
     */
    public function testgetRecordName(): void
    {
        $this->assertEquals('', $this->object->getRecordName());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::getEmail
     *
     * @todo   Implement testgetEmail().
     */
    public function testgetEmail(): void
    {
        $this->assertEquals('', $this->object->getEmail());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::tryToLogin
     *
     * @todo   Implement testtryToLogin().
     */
    public function testtryToLogin(): void
    {
        $this->assertEquals('', $this->object->tryToLogin());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::passwordValidation
     *
     * @todo   Implement testpasswordValidation().
     */
    public function testpasswordValidation(): void
    {
        $this->assertEquals('', $this->object->passwordValidation());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::loginSuccess
     *
     * @todo   Implement testloginSuccess().
     */
    public function testloginSuccess(): void
    {
        $this->assertEquals('', $this->object->loginSuccess());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::logout
     *
     * @todo   Implement testlogout().
     */
    public function testlogout(): void
    {
        $this->assertEquals('', $this->object->logout());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::encryptPassword
     *
     * @todo   Implement testencryptPassword().
     */
    public function testencryptPassword(): void
    {
        $this->assertEquals('', $this->object->encryptPassword());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::passwordChange
     *
     * @todo   Implement testpasswordChange().
     */
    public function testpasswordChange(): void
    {
        $this->assertEquals('', $this->object->passwordChange());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::columnDefs
     *
     * @todo   Implement testcolumnDefs().
     */
    public function testcolumnDefs(): void
    {
        $this->assertEquals('', $this->object->columnDefs());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::singleton
     *
     * @todo   Implement testsingleton().
     */
    public function testsingleton(): void
    {
        $this->assertEquals('', $this->object->singleton());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::setUpDb
     *
     * @todo   Implement testsetUpDb().
     */
    public function testsetUpDb(): void
    {
        $this->assertEquals('', $this->object->setUpDb());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::setUp
     *
     * @todo   Implement testsetUp().
     */
    public function testsetUp(): void
    {
        $this->assertEquals('', $this->object->setUp());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::pdoConnect
     *
     * @todo   Implement testpdoConnect().
     */
    public function testpdoConnect(): void
    {
        $this->assertEquals('', $this->object->pdoConnect());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::getPdo
     *
     * @todo   Implement testgetPdo().
     */
    public function testgetPdo(): void
    {
        $this->assertEquals('', $this->object->getPdo());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::getFluentPDO
     *
     * @todo   Implement testgetFluentPDO().
     */
    public function testgetFluentPDO(): void
    {
        $this->assertEquals('', $this->object->getFluentPDO());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::listingQuery
     *
     * @todo   Implement testlistingQuery().
     */
    public function testlistingQuery(): void
    {
        $this->assertEquals('', $this->object->listingQuery());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::getColumnsFromSQL
     *
     * @todo   Implement testgetColumnsFromSQL().
     */
    public function testgetColumnsFromSQL(): void
    {
        $this->assertEquals('', $this->object->getColumnsFromSQL());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::getDataFromSQL
     *
     * @todo   Implement testgetDataFromSQL().
     */
    public function testgetDataFromSQL(): void
    {
        $this->assertEquals('', $this->object->getDataFromSQL());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::loadFromSQL
     *
     * @todo   Implement testloadFromSQL().
     */
    public function testloadFromSQL(): void
    {
        $this->assertEquals('', $this->object->loadFromSQL());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::dbreload
     *
     * @todo   Implement testdbreload().
     */
    public function testdbreload(): void
    {
        $this->assertEquals('', $this->object->dbreload());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::dbsync
     *
     * @todo   Implement testdbsync().
     */
    public function testdbsync(): void
    {
        $this->assertEquals('', $this->object->dbsync());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::updateToSQL
     *
     * @todo   Implement testupdateToSQL().
     */
    public function testupdateToSQL(): void
    {
        $this->assertEquals('', $this->object->updateToSQL());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::saveToSQL
     *
     * @todo   Implement testsaveToSQL().
     */
    public function testsaveToSQL(): void
    {
        $this->assertEquals('', $this->object->saveToSQL());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::insertToSQL
     *
     * @todo   Implement testinsertToSQL().
     */
    public function testinsertToSQL(): void
    {
        $this->assertEquals('', $this->object->insertToSQL());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::deleteFromSQL
     *
     * @todo   Implement testdeleteFromSQL().
     */
    public function testdeleteFromSQL(): void
    {
        $this->assertEquals('', $this->object->deleteFromSQL());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::takeToData
     *
     * @todo   Implement testtakeToData().
     */
    public function testtakeToData(): void
    {
        $this->assertEquals('', $this->object->takeToData());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \MultiFlexi\User::getMyTable
     */
    public function testgetMyTable(): void
    {
        $this->assertEquals('user', $this->object->getMyTable());
    }

    /**
     * @covers \MultiFlexi\User::setMyTable
     *
     * @todo   Implement testsetMyTable().
     */
    public function testsetMyTable(): void
    {
        $this->assertEquals('', $this->object->setMyTable());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }
}
