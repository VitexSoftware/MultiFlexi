{
  "openapi": "3.0.0",
  "info": {
    "title": "MultiFlexi API",
    "description": "This is an example of using OAuth2 Application Flow in a specification to describe security to your API.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/VitexSoftware/MultiFlexi/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Redirect to index",
        "responses": {
          "301": {
            "description": "redirect to index.html"
          }
        }
      }
    },
    "/index.{suffix}": {
      "get": {
        "summary": "Endpoints listing",
        "description": "Show current API",
        "operationId": "getApiIndex",
        "parameters": [
          {
            "name": "suffix",
            "in": "path",
            "description": "force format suffix",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "html",
              "enum": [
                "json",
                "xml",
                "yaml",
                "html"
              ]
            },
            "example": "json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": []
      }
    },
    "/login.{suffix}": {
      "get": {
        "summary": "Return User's token",
        "description": "Send login & password to obtain oAuth token",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "existing user name",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "existing user password",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suffix",
            "in": "path",
            "description": "force format suffix",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "html",
              "enum": [
                "json",
                "xml",
                "yaml",
                "html"
              ]
            },
            "example": "json"
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          }
        }
      },
      "post": {
        "summary": "Return User's token",
        "description": "Send login & password to obtain oAuth token",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "existing user name",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "existing user password",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suffix",
            "in": "path",
            "description": "force format suffix",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "html",
              "enum": [
                "json",
                "xml",
                "yaml",
                "html"
              ]
            },
            "example": "json"
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          }
        }
      }
    },
    "/ping.{suffix}": {
      "get": {
        "summary": "Server heartbeat operation",
        "description": "This operation shows how to override the global security defined above, as we want to open it up for all users.",
        "parameters": [
          {
            "name": "suffix",
            "in": "path",
            "description": "force format suffix",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "html",
              "enum": [
                "json",
                "xml",
                "yaml",
                "html"
              ]
            },
            "example": "json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": []
      }
    },
    "/app/{appId}.{suffix}": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "Get App by ID",
        "description": "Returns a single App",
        "operationId": "getAppById",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "ID of app to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "^\\d+",
              "type": "string"
            }
          },
          {
            "name": "suffix",
            "in": "path",
            "description": "force format suffix",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "html",
              "enum": [
                "json",
                "xml",
                "yaml",
                "html"
              ]
            },
            "example": ".json"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW_Authenticate": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "App not found"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/app/": {
      "post": {
        "tags": [
          "app"
        ],
        "summary": "Create or Update Application",
        "description": "Create or Update App by ID",
        "operationId": "setAppById",
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "description": "ID of app to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "application created or updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW_Authenticate": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "App not found"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/server/{serverId}.{suffix}": {
      "get": {
        "tags": [
          "server"
        ],
        "summary": "Get Server by ID",
        "description": "Returns a single Server",
        "operationId": "getServerById",
        "parameters": [
          {
            "name": "serverId",
            "in": "path",
            "description": "ID of app to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "suffix",
            "in": "path",
            "description": "force format suffix",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "html",
              "enum": [
                "json",
                "xml",
                "yaml",
                "html"
              ]
            },
            "example": "json"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Server"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW_Authenticate": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "App not found"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/server/": {
      "post": {
        "tags": [
          "server"
        ],
        "summary": "Create or Update Server record",
        "description": "Create or Update single Server record",
        "operationId": "setServerById",
        "parameters": [
          {
            "name": "serverId",
            "in": "query",
            "description": "ID of app to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "record created or updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Server"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW_Authenticate": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "App not found"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/apps.{suffix}": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "Show All Apps",
        "description": "All apps registeres",
        "operationId": "listApps",
        "parameters": [
          {
            "name": "suffix",
            "in": "path",
            "description": "force format suffix",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "html",
              "enum": [
                "json",
                "xml",
                "yaml",
                "html"
              ]
            },
            "example": "json"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/App"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW_Authenticate": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/servers": {
      "get": {
        "tags": [
          "server"
        ],
        "summary": "Show All Servers",
        "description": "All Server servers registered",
        "operationId": "listServers",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Server"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          },
          "401": {
            "description": "Authentication information is missing or invalid",
            "headers": {
              "WWW_Authenticate": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "App": {
        "required": [
          "executable",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "matcher"
          },
          "executable": {
            "type": "string",
            "example": "server-matcher"
          },
          "tags": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "status": {
            "type": "string",
            "description": "App status in the store",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        },
        "xml": {
          "name": "App"
        },
        "x-swagger-router-model": "com.vitexsoftware.multiflexi.model.App"
      },
      "User": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "enabled": {
            "type": "bool",
            "example": true
          },
          "settings": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "login": {
            "type": "string"
          },
          "DatCreate": {
            "type": "string",
            "format": "date-time"
          },
          "DatSave": {
            "type": "string",
            "format": "date-time"
          },
          "last_modifier_id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          }
        }
      },
      "Server": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "DatCreate": {
            "type": "string",
            "format": "date-time"
          },
          "DatSave": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ConfField": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "app_id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "keyname": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "text",
              "number",
              "date",
              "email",
              "password",
              "checkbox"
            ]
          },
          "description": {
            "type": "string"
          },
          "defval": {
            "type": "string"
          }
        }
      },
      "Configuration": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "app_id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "Customer": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "enabled": {
            "type": "bool",
            "example": true
          },
          "settings": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "login": {
            "type": "string"
          },
          "DatCreate": {
            "type": "string",
            "format": "date-time"
          },
          "DatSave": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AppCompany": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "app_id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "iterv": {
            "type": "string",
            "description": "interval",
            "enum": [
              "h",
              "d",
              "w",
              "m",
              "y"
            ]
          }
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "tag"
        },
        "x-swagger-router-model": "com.vitexsoftware.multiflexi.model.Tag"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Authentication information is missing or invalid",
        "headers": {
          "WWW_Authenticate": {
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}