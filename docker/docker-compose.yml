services:
  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile.web
    ports:
      - "${WEB_PORT:-8080}:80"
    environment:
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=db
      - DB_DATABASE=${DB_DATABASE:-multiflexi}
      - DB_USERNAME=${DB_USERNAME:-multiflexiuser}
      - DB_PASSWORD=${DB_PASSWORD:-userpassword}
      - APACHE_DOCUMENT_ROOT=/opt/multiflexi/src
    volumes:
      - web_logs:/var/log/apache2
      - sqlite_data:/opt/multiflexi/db
      - config_data:/etc/multiflexi
    depends_on:
      db:
        condition: service_healthy
    networks:
      - multiflexi_network
    restart: unless-stopped

  executor:
    build:
      context: .
      dockerfile: Dockerfile.executor
    environment:
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=db
      - DB_DATABASE=${DB_DATABASE:-multiflexi}
      - DB_USERNAME=${DB_USERNAME:-multiflexiuser}
      - DB_PASSWORD=${DB_PASSWORD:-userpassword}
    volumes:
      - executor_logs:/var/log/multiflexi
      - config_data:/etc/multiflexi
      - ./multiflexi.env:/etc/multiflexi/multiflexi.env:ro
    depends_on:
      db:
        condition: service_healthy
    networks:
      - multiflexi_network
    restart: unless-stopped

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.scheduler
    environment:
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=db
      - DB_DATABASE=${DB_DATABASE:-multiflexi}
      - DB_USERNAME=${DB_USERNAME:-multiflexiuser}
      - DB_PASSWORD=${DB_PASSWORD:-userpassword}
    volumes:
      - scheduler_logs:/var/log/multiflexi
      - config_data:/etc/multiflexi
      - ./multiflexi.env:/etc/multiflexi/multiflexi.env:ro
    depends_on:
      db:
        condition: service_healthy
    networks:
      - multiflexi_network
    restart: unless-stopped

  db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-strong_root_password}
      - MYSQL_DATABASE=${DB_DATABASE:-multiflexi}
      - MYSQL_USER=${DB_USERNAME:-multiflexiuser}
      - MYSQL_PASSWORD=${DB_PASSWORD:-userpassword}
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "${DB_PORT:-3306}:3306"
    networks:
      - multiflexi_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 30s


networks:
  multiflexi_network:
    driver: bridge

volumes:
  db_data:
  web_logs:
  executor_logs:
  scheduler_logs:
  sqlite_data:
  config_data:
