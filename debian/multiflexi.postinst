#!/bin/sh
# postinst script for multiflexi
set -e

. /usr/share/debconf/confmodule

if [ -f /usr/share/dbconfig-common/dpkg/postinst ]; then
    . /usr/share/dbconfig-common/dpkg/postinst
    dbc_generate_include_args="-U -o template_infile=/usr/lib/multiflexi/.env.template"
    dbc_generate_include=template:/etc/multiflexi/multiflexi.env
    dbc_generate_include_owner="root:www-data"
    dbc_generate_include_perms="664"
    dbc_dbfile_owner="www-data:www-data"
    dbc_dbfile_perms="0664"
    dbc_dbuser=multiflexi
    dbc_dbname=multiflexi

    dbc_go multiflexi "$@"

    #echo "############################"
    #cat /etc/multiflexi/multiflexi.env
    #echo "############################"

    phinx migrate -c /usr/lib/multiflexi/phinx-adapter.php
    echo 'run "multiflexi-phinx seed:run" to load demo data'
    echo 'run "multiflexi-phinx seed:run  -s AppSeeder" to load only plugins demo setup'

    if [ -f /var/lib/multiflexi/multiflexi ]; then
        chown root:www-data /var/lib/multiflexi/
        chmod ug+rw /var/lib/multiflexi/
        chown root:www-data /var/lib/multiflexi/multiflexi
        chmod ug+rw /var/lib/multiflexi/multiflexi
    fi

    composer-debian multiflexi
    multiflexi-json2app /usr/share/multiflexi/multiflexi_probe.multiflexi.app.json
fi

pathfind() {
    OLDIFS="$IFS"
    IFS=:
    for p in $PATH; do
        if [ -x "$p/$*" ]; then
            IFS="$OLDIFS"
            return 0
        fi
    done
    IFS="$OLDIFS"
    return 1
}

lighttpd_install() {
    if [ -d /etc/lighttpd/conf-available ] && [ ! -f /etc/lighttpd/conf-available/50-multiflexi.conf ]; then
        if pathfind lighty-enable-mod; then
            ln -s /etc/multiflexi/lighttpd.conf /etc/lighttpd/conf-available/50-multiflexi.conf
            if ! { lighty-enable-mod multiflexi fastcgi fastcgi-php || [ $? -eq 2 ]; }; then
                return 1
            fi
        fi
    fi
}

[ ! -e /usr/share/apache2/apache2-maintscript-helper ] ||
    . /usr/share/apache2/apache2-maintscript-helper
apache_install() {
    if [ -e /usr/share/apache2/apache2-maintscript-helper ]; then
        if [ -d /etc/apache2/conf-available ] && [ ! -e /etc/apache2/conf-available/multiflexi.conf ]; then
            ln -s /etc/multiflexi/apache.conf /etc/apache2/conf-available/multiflexi.conf
        fi
        # Remove old symlink if present
        if [ -d /etc/apache2/conf.d ] && [ -h /etc/apache2/conf.d/multiflexi ]; then
            rm /etc/apache2/conf.d/multiflexi
        fi
        # Enable the configuration
        apache2_invoke enconf multiflexi.conf
    fi
}

. /usr/share/debconf/confmodule

composer-debian multiflexi

case "$1" in
install | upgrade)

    # If the package has default file it could be sourced, so that
    # the local admin can overwrite the defaults

    [ -f "/etc/default/multiflexi" ] && . /etc/default/multiflexi

    # Sane defaults:

    [ -z "$SERVER_HOME" ] && SERVER_HOME=/var/lib/multiflexi
    [ -z "$SERVER_USER" ] && SERVER_USER=multiflexi
    [ -z "$SERVER_NAME" ] && SERVER_NAME="MultiFlexi"
    [ -z "$SERVER_GROUP" ] && SERVER_GROUP=multiflexi

    # Groups that the user will be added to, if undefined, then none.
    ADDGROUP="multiflexi"

    # create user to avoid running server as root
    # 1. create group if not existing
    if ! getent group | grep -q "^$SERVER_GROUP:"; then
        echo -n "Adding group $SERVER_GROUP.."
        addgroup --quiet --system $SERVER_GROUP 2>/dev/null || true
        echo "..done"
    fi
    # 2. create homedir if not existing
    test -d $SERVER_HOME || mkdir $SERVER_HOME
    # 3. create user if not existing
    if ! getent passwd | grep -q "^$SERVER_USER:"; then
        echo -n "Adding system user $SERVER_USER.."
        adduser --quiet \
            --system \
            --ingroup $SERVER_GROUP \
            --no-create-home \
            --disabled-password \
            $SERVER_USER 2>/dev/null || true
        echo "..done"
    fi
    # 4. adjust passwd entry
    usermod -c "$SERVER_NAME" \
        -d $SERVER_HOME \
        -g $SERVER_GROUP \
        $SERVER_USER
    # 5. adjust file and directory permissions
    if ! dpkg-statoverride --list $SERVER_HOME >/dev/null; then
        chown -R $SERVER_USER:adm $SERVER_HOME
        chmod u=rwx,g=rxs,o= $SERVER_HOME
    fi
    # 6. Add the user to the ADDGROUP group
    if test -n $ADDGROUP; then
        if ! groups $SERVER_USER | cut -d: -f2 |
            grep -qw $ADDGROUP; then
            adduser $SERVER_USER $ADDGROUP
        fi
    fi
    ;;
configure)

    # Handle webserver reconfiguration/restart ; stolen from zabbix package
    db_get multiflexi/reconfigure-webserver || true
    webservers="$RET"
    restart=""

    for webserver in $webservers; do
        webserver=${webserver%,}
        case "$webserver" in
        lighttpd)
            lighttpd_install
            ;;
        apache2)
            apache_install
            ;;
        esac
        pathfind $webserver || continue
        restart="$restart $webserver"
    done

    db_get multiflexi/restart-webserver || true
    res="$RET"
    db_stop || true
    if [ "$res" = "true" ]; then
        for webserver in $restart; do
            webserver=${webserver%,}
            # Redirection of 3 is needed because Debconf uses it and it might
            # be inherited by webserver. See bug #446324.
            if pathfind invoke-rc.d; then
                invoke-rc.d $webserver reload 3>/dev/null || true
            else
                /etc/init.d/$webserver reload 3>/dev/null || true
            fi
        done
    fi

    ;;

abort-upgrade | abort-remove | abort-deconfigure) ;;

*)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
    ;;
esac

#DEBHELPER#

exit 0
